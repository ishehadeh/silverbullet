@precedence { mul @left, add @left }
@top Program { expr }
@skip { space }

expr { value | InfixExpr }

value { Bool | String | Number | Null | Name }

InfixExpr {
  expr !mul OpMul expr |
  expr !mul OpDiv expr |
  expr !add OpSub expr |
  expr !add OpAdd expr
}

@tokens {
  space { std.whitespace+ }

  Null { "null" }

  Bool { "true" | "false" }

  String {
    ("\"" | "“" | "”") ![\"”“]* ("\"" | "“" | "”")
  }

  Number { std.digit+ }

  Name { (std.asciiLetter | "-" | "_")+ }

  OpAdd { "+" }
  OpSub { "-" }
  OpMul { "*" }
  OpDiv { "/" }

  @precedence { Bool, Null, Name }
}
